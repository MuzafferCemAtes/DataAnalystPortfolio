<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.DatagraphCoreV1.true...DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <_.fcp.DatagraphNodeSingleValueFieldV1.true...DatagraphNodeSingleValueFieldV1 />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='BritishAirwaysReviewWCleanData' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rating&quot;'>
        <calculation class='tableau' formula='&quot;Rating&quot;' />
        <aliases>
          <alias key='&quot;Food&quot;' value='Food &amp; Beverages' />
        </aliases>
        <members>
          <member value='&quot;Rating&quot;' />
          <member value='&quot;Cabin Staff Service&quot;' />
          <member value='&quot;Ground Service&quot;' />
          <member value='&quot;Seat Comfort&quot;' />
          <member alias='Food &amp; Beverages' value='&quot;Food&quot;' />
          <member value='&quot;Entertainment&quot;' />
          <member value='&quot;Value For Money&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='clean_data+' inline='true' name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='clean_data' name='textscan.0b1gxpm04lstdp1fblqw31s7fklw'>
            <connection class='textscan' directory='C:/Users/cem-c/Desktop/BritishAirwaysProject_v2' filename='clean_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0b1gxpm04lstdp1fblqw31s7fklw' name='Countries.csv' table='[Countries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='string' name='Continent' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0b1gxpm04lstdp1fblqw31s7fklw' name='clean_data.csv' table='[clean_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='rating' ordinal='1' />
              <column datatype='string' name='header' ordinal='2' />
              <column datatype='string' name='author' ordinal='3' />
              <column datatype='date' name='date' ordinal='4' />
              <column datatype='string' name='place' ordinal='5' />
              <column datatype='string' name='content' ordinal='6' />
              <column datatype='string' name='aircraft' ordinal='7' />
              <column datatype='string' name='traveller_type' ordinal='8' />
              <column datatype='string' name='seat_type' ordinal='9' />
              <column datatype='string' name='departure' ordinal='10' />
              <column datatype='string' name='destination' ordinal='11' />
              <column datatype='integer' name='year' ordinal='12' />
              <column datatype='string' name='month' ordinal='13' />
              <column datatype='real' name='seat_comfort' ordinal='14' />
              <column datatype='real' name='cabin_staff_service' ordinal='15' />
              <column datatype='real' name='food_beverages' ordinal='16' />
              <column datatype='real' name='ground_service' ordinal='17' />
              <column datatype='real' name='value_for_money' ordinal='18' />
              <column datatype='real' name='entertainment' ordinal='19' />
              <column datatype='boolean' name='recommended' ordinal='20' />
              <column datatype='string' name='trip_verified' ordinal='21' />
            </columns>
          </relation>
          <relation connection='textscan.0b1gxpm04lstdp1fblqw31s7fklw' name='Countries.csv' table='[Countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='string' name='Continent' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>header</remote-name>
            <remote-type>129</remote-type>
            <local-name>[header]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>header</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>content</remote-name>
            <remote-type>129</remote-type>
            <local-name>[content]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>content</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aircraft]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>aircraft</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>traveller_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[traveller_type]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>traveller_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seat_type]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>seat_type</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[departure]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>departure</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>destination</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>5</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_beverages</remote-name>
            <remote-type>5</remote-type>
            <local-name>[food_beverages]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>food_beverages</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entertainment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[entertainment]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>entertainment</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>11</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>20</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_verified]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>trip_verified</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
          <bin default-name='false' value='&quot;Other Aircrafts&quot;'>
            <value>&quot;767-300&quot;</value>
            <value>&quot;777&quot;</value>
            <value>&quot;777-200&quot;</value>
            <value>&quot;787&quot;</value>
            <value>&quot;A19&quot;</value>
            <value>&quot;A219&quot;</value>
            <value>&quot;A318&quot;</value>
            <value>&quot;A319 / A320&quot;</value>
            <value>&quot;A319/A320&quot;</value>
            <value>&quot;A319/A321&quot;</value>
            <value>&quot;A320 / Boeing 767&quot;</value>
            <value>&quot;A320 and A319&quot;</value>
            <value>&quot;A320 Finnair&quot;</value>
            <value>&quot;A320 neo&quot;</value>
            <value>&quot;A320 Neo&quot;</value>
            <value>&quot;A320-200&quot;</value>
            <value>&quot;A320-233&quot;</value>
            <value>&quot;A320, Boeing 767-300&quot;</value>
            <value>&quot;A320/319&quot;</value>
            <value>&quot;A320/321&quot;</value>
            <value>&quot;A320/A319&quot;</value>
            <value>&quot;A320/A321&quot;</value>
            <value>&quot;A320neo&quot;</value>
            <value>&quot;A320Neo&quot;</value>
            <value>&quot;A320NEO&quot;</value>
            <value>&quot;A321 and B767&quot;</value>
            <value>&quot;A321 neo&quot;</value>
            <value>&quot;A321 Neo&quot;</value>
            <value>&quot;A321-200&quot;</value>
            <value>&quot;A321-neo&quot;</value>
            <value>&quot;A321/A319&quot;</value>
            <value>&quot;A321neo&quot;</value>
            <value>&quot;A321Neo&quot;</value>
            <value>&quot;A321NEO&quot;</value>
            <value>&quot;A322&quot;</value>
            <value>&quot;A330&quot;</value>
            <value>&quot;A340-300&quot;</value>
            <value>&quot;A340-300, A320&quot;</value>
            <value>&quot;A350&quot;</value>
            <value>&quot;A350-1000&quot;</value>
            <value>&quot;A380 / Boeing 747-400&quot;</value>
            <value>&quot;A380 / Boeing 777&quot;</value>
            <value>&quot;A380 800&quot;</value>
            <value>&quot;A380 and 747&quot;</value>
            <value>&quot;A380 and Boeing 747&quot;</value>
            <value>&quot;A380 and Boeing 777&quot;</value>
            <value>&quot;A380-800&quot;</value>
            <value>&quot;Airbus A32&quot;</value>
            <value>&quot;Airbus A320&quot;</value>
            <value>&quot;Airbus A380&quot;</value>
            <value>&quot;B0eing 747-400&quot;</value>
            <value>&quot;B747 400&quot;</value>
            <value>&quot;B747-400&quot;</value>
            <value>&quot;B747-400 in retro&quot;</value>
            <value>&quot;B777-200&quot;</value>
            <value>&quot;Boeing 737&quot;</value>
            <value>&quot;Boeing 737 800&quot;</value>
            <value>&quot;Boeing 737-400&quot;</value>
            <value>&quot;Boeing 737-800&quot;</value>
            <value>&quot;Boeing 744&quot;</value>
            <value>&quot;Boeing 747 / 777&quot;</value>
            <value>&quot;Boeing 747 400&quot;</value>
            <value>&quot;Boeing 747 and Boeing 777&quot;</value>
            <value>&quot;Boeing 747- 400&quot;</value>
            <value>&quot;Boeing 747-400 / A380&quot;</value>
            <value>&quot;Boeing 757&quot;</value>
            <value>&quot;Boeing 767&quot;</value>
            <value>&quot;Boeing 767 / A320&quot;</value>
            <value>&quot;Boeing 767-300&quot;</value>
            <value>&quot;Boeing 767, A319&quot;</value>
            <value>&quot;Boeing 767/Airbus A320&quot;</value>
            <value>&quot;Boeing 777&quot;</value>
            <value>&quot;Boeing 777 - 200&quot;</value>
            <value>&quot;Boeing 777 -200&quot;</value>
            <value>&quot;Boeing 777 / A380&quot;</value>
            <value>&quot;Boeing 777 200/300&quot;</value>
            <value>&quot;Boeing 777 and Boeing 787&quot;</value>
            <value>&quot;Boeing 777-200 / 747-400&quot;</value>
            <value>&quot;Boeing 777-200 ER&quot;</value>
            <value>&quot;Boeing 777-200/300&quot;</value>
            <value>&quot;Boeing 777-200ER&quot;</value>
            <value>&quot;Boeing 777-236 ER&quot;</value>
            <value>&quot;Boeing 777-300&quot;</value>
            <value>&quot;Boeing 777-300ER&quot;</value>
            <value>&quot;boeing 787&quot;</value>
            <value>&quot;Boeing 787 Dreamliner&quot;</value>
            <value>&quot;Boeing 787-10&quot;</value>
            <value>&quot;Boeing 787-8&quot;</value>
            <value>&quot;Boeing 787-8 / 787-9&quot;</value>
            <value>&quot;Boeing 787-800&quot;</value>
            <value>&quot;Boeing 787-800 / 777-200&quot;</value>
            <value>&quot;Boeing 787-9&quot;</value>
            <value>&quot;Boeing 787-9, A380&quot;</value>
            <value>&quot;Boeing 787-900&quot;</value>
            <value>&quot;Boeing 787(9)&quot;</value>
            <value>&quot;Boieng 777-200&quot;</value>
            <value>&quot;Dreamliner&quot;</value>
            <value>&quot;E-170&quot;</value>
            <value>&quot;E-190&quot;</value>
            <value>&quot;E170&quot;</value>
            <value>&quot;E170 / A319&quot;</value>
            <value>&quot;E190&quot;</value>
            <value>&quot;EMB190&quot;</value>
            <value>&quot;Embraer&quot;</value>
            <value>&quot;Embraer 170&quot;</value>
            <value>&quot;Embraer 190&quot;</value>
            <value>&quot;Embraer 195&quot;</value>
            <value>&quot;Embraer E190&quot;</value>
            <value>&quot;Embraer-190&quot;</value>
            <value>&quot;Embraer170&quot;</value>
            <value>&quot;Saab 2000&quot;</value>
            <value>&quot;SAAB 2000&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Metric Selected' datatype='real' name='[Calculation_927178577265307648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Rating&apos; then [rating]&#13;&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#13;&#10;when &apos;Ground Service&apos; then [ground_service]&#13;&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#13;&#10;when &apos;Food&apos; then [food_beverages]&#13;&#10;when &apos;Entertainment&apos; then [entertainment]&#13;&#10;when &apos;Value For Money&apos; then [value_for_money]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Countries.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='clean_data.csv' datatype='table' name='[__tableau_internal_object_id__].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' role='measure' type='quantitative' />
      <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
      <column caption='Author' datatype='string' name='[author]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='real' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Content' datatype='string' name='[content]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Departure' datatype='string' name='[departure]' role='dimension' type='nominal' />
      <column caption='Destination' datatype='string' name='[destination]' role='dimension' type='nominal' />
      <column caption='Entertainment' datatype='real' name='[entertainment]' role='measure' type='quantitative' />
      <column caption='Food' datatype='real' name='[food_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='real' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Header' datatype='string' name='[header]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='boolean' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='real' name='[seat_comfort]' role='measure' type='quantitative' />
      <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
      <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      <column caption='Trip Verified' datatype='string' name='[trip_verified]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='real' name='[value_for_money]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/cem-c/AppData/Local/Temp/TableauTemp/#TableauTemp_0gym85l0dtoxaa137ca5f1au7o10.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/15/2024 08:46:28 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53' table='[Extract].[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043' table='[Extract].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' type='table' />
            <relation name='Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53' table='[Extract].[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>clean_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2268</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>1</ordinal>
              <family>clean_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>header</remote-name>
              <remote-type>129</remote-type>
              <local-name>[header]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>header</remote-alias>
              <ordinal>2</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1949</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>author</remote-name>
              <remote-type>129</remote-type>
              <local-name>[author]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>author</remote-alias>
              <ordinal>3</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1169</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>4</ordinal>
              <family>clean_data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1128</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[place]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>place</remote-alias>
              <ordinal>5</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>content</remote-name>
              <remote-type>129</remote-type>
              <local-name>[content]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>content</remote-alias>
              <ordinal>6</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2268</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aircraft</remote-name>
              <remote-type>129</remote-type>
              <local-name>[aircraft]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>aircraft</remote-alias>
              <ordinal>7</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>91</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>traveller_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[traveller_type]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>traveller_type</remote-alias>
              <ordinal>8</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seat_type]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>seat_type</remote-alias>
              <ordinal>9</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[departure]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>departure</remote-alias>
              <ordinal>10</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>189</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>destination</remote-name>
              <remote-type>129</remote-type>
              <local-name>[destination]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>destination</remote-alias>
              <ordinal>11</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>12</ordinal>
              <family>clean_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>13</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_comfort</remote-name>
              <remote-type>5</remote-type>
              <local-name>[seat_comfort]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>seat_comfort</remote-alias>
              <ordinal>14</ordinal>
              <family>clean_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cabin_staff_service</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cabin_staff_service]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>cabin_staff_service</remote-alias>
              <ordinal>15</ordinal>
              <family>clean_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>food_beverages</remote-name>
              <remote-type>5</remote-type>
              <local-name>[food_beverages]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>food_beverages</remote-alias>
              <ordinal>16</ordinal>
              <family>clean_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ground_service</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ground_service]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>ground_service</remote-alias>
              <ordinal>17</ordinal>
              <family>clean_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value_for_money</remote-name>
              <remote-type>5</remote-type>
              <local-name>[value_for_money]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>value_for_money</remote-alias>
              <ordinal>18</ordinal>
              <family>clean_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>entertainment</remote-name>
              <remote-type>5</remote-type>
              <local-name>[entertainment]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>entertainment</remote-alias>
              <ordinal>19</ordinal>
              <family>clean_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>recommended</remote-name>
              <remote-type>11</remote-type>
              <local-name>[recommended]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>recommended</remote-alias>
              <ordinal>20</ordinal>
              <family>clean_data.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_verified</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trip_verified]</local-name>
              <parent-name>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</parent-name>
              <remote-alias>trip_verified</remote-alias>
              <ordinal>21</ordinal>
              <family>clean_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>22</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>251</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>23</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>250</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>24</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>25</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rating&quot;'>
          <calculation class='tableau' formula='&quot;Rating&quot;' />
          <aliases>
            <alias key='&quot;Food&quot;' value='Food &amp; Beverages' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Countries.csv' id='Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53'>
            <properties context=''>
              <relation connection='textscan.0b1gxpm04lstdp1fblqw31s7fklw' name='Countries.csv' table='[Countries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='string' name='Continent' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53' table='[Extract].[Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53]' type='table' />
            </properties>
          </object>
          <object caption='clean_data.csv' id='clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043'>
            <properties context=''>
              <relation connection='textscan.0b1gxpm04lstdp1fblqw31s7fklw' name='clean_data.csv' table='[clean_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='rating' ordinal='1' />
                  <column datatype='string' name='header' ordinal='2' />
                  <column datatype='string' name='author' ordinal='3' />
                  <column datatype='date' name='date' ordinal='4' />
                  <column datatype='string' name='place' ordinal='5' />
                  <column datatype='string' name='content' ordinal='6' />
                  <column datatype='string' name='aircraft' ordinal='7' />
                  <column datatype='string' name='traveller_type' ordinal='8' />
                  <column datatype='string' name='seat_type' ordinal='9' />
                  <column datatype='string' name='departure' ordinal='10' />
                  <column datatype='string' name='destination' ordinal='11' />
                  <column datatype='integer' name='year' ordinal='12' />
                  <column datatype='string' name='month' ordinal='13' />
                  <column datatype='real' name='seat_comfort' ordinal='14' />
                  <column datatype='real' name='cabin_staff_service' ordinal='15' />
                  <column datatype='real' name='food_beverages' ordinal='16' />
                  <column datatype='real' name='ground_service' ordinal='17' />
                  <column datatype='real' name='value_for_money' ordinal='18' />
                  <column datatype='real' name='entertainment' ordinal='19' />
                  <column datatype='boolean' name='recommended' ordinal='20' />
                  <column datatype='string' name='trip_verified' ordinal='21' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043' table='[Extract].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[place]' />
              <expression op='[Country]' />
            </expression>
            <first-end-point object-id='clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043' />
            <second-end-point object-id='Countries.csv_87956C110F9B4C3BB0F17ED6DA2C1C53' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0'>
      <datasources>
        <datasource caption='clean_data+' name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0' />
      </datasources>
      <datasource-dependencies datasource='federated.0w7kqq11bdqohj1gtgbs80a1bgp0'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Other Aircrafts&quot;'>
              <value>&quot;767-300&quot;</value>
              <value>&quot;777&quot;</value>
              <value>&quot;777-200&quot;</value>
              <value>&quot;787&quot;</value>
              <value>&quot;A19&quot;</value>
              <value>&quot;A219&quot;</value>
              <value>&quot;A318&quot;</value>
              <value>&quot;A319 / A320&quot;</value>
              <value>&quot;A319/A320&quot;</value>
              <value>&quot;A319/A321&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 and A319&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 neo&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320-233&quot;</value>
              <value>&quot;A320, Boeing 767-300&quot;</value>
              <value>&quot;A320/319&quot;</value>
              <value>&quot;A320/321&quot;</value>
              <value>&quot;A320/A319&quot;</value>
              <value>&quot;A320/A321&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A320Neo&quot;</value>
              <value>&quot;A320NEO&quot;</value>
              <value>&quot;A321 and B767&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-200&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321/A319&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A321Neo&quot;</value>
              <value>&quot;A321NEO&quot;</value>
              <value>&quot;A322&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 / Boeing 777&quot;</value>
              <value>&quot;A380 800&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380 and Boeing 747&quot;</value>
              <value>&quot;A380 and Boeing 777&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;Airbus A32&quot;</value>
              <value>&quot;Airbus A320&quot;</value>
              <value>&quot;Airbus A380&quot;</value>
              <value>&quot;B0eing 747-400&quot;</value>
              <value>&quot;B747 400&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B747-400 in retro&quot;</value>
              <value>&quot;B777-200&quot;</value>
              <value>&quot;Boeing 737&quot;</value>
              <value>&quot;Boeing 737 800&quot;</value>
              <value>&quot;Boeing 737-400&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / 777&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747- 400&quot;</value>
              <value>&quot;Boeing 747-400 / A380&quot;</value>
              <value>&quot;Boeing 757&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 767 / A320&quot;</value>
              <value>&quot;Boeing 767-300&quot;</value>
              <value>&quot;Boeing 767, A319&quot;</value>
              <value>&quot;Boeing 767/Airbus A320&quot;</value>
              <value>&quot;Boeing 777&quot;</value>
              <value>&quot;Boeing 777 - 200&quot;</value>
              <value>&quot;Boeing 777 -200&quot;</value>
              <value>&quot;Boeing 777 / A380&quot;</value>
              <value>&quot;Boeing 777 200/300&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200 / 747-400&quot;</value>
              <value>&quot;Boeing 777-200 ER&quot;</value>
              <value>&quot;Boeing 777-200/300&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;boeing 787&quot;</value>
              <value>&quot;Boeing 787 Dreamliner&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-8 / 787-9&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-800 / 777-200&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9, A380&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;Boieng 777-200&quot;</value>
              <value>&quot;Dreamliner&quot;</value>
              <value>&quot;E-170&quot;</value>
              <value>&quot;E-190&quot;</value>
              <value>&quot;E170&quot;</value>
              <value>&quot;E170 / A319&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;EMB190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
              <value>&quot;Embraer 195&quot;</value>
              <value>&quot;Embraer E190&quot;</value>
              <value>&quot;Embraer-190&quot;</value>
              <value>&quot;Embraer170&quot;</value>
              <value>&quot;Saab 2000&quot;</value>
              <value>&quot;SAAB 2000&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]'>
        <groupfilter function='level-members' level='[Aircraft (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]'>
        <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]'>
        <groupfilter function='level-members' level='[none:seat_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]'>
        <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]' included-values='in-range'>
        <min>#2015-06-01 00:00:00#</min>
        <max>#2023-10-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Aircraft'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>Average &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>&gt; By Aircraft</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data+' name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rating&quot;'>
              <calculation class='tableau' formula='&quot;Rating&quot;' />
              <aliases>
                <alias key='&quot;Food&quot;' value='Food &amp; Beverages' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0w7kqq11bdqohj1gtgbs80a1bgp0'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Other Aircrafts&quot;'>
                  <value>&quot;767-300&quot;</value>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-200&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A319/A321&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 and A319&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, Boeing 767-300&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/321&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/A321&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 and B767&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321/A319&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 800&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;Airbus A380&quot;</value>
                  <value>&quot;B0eing 747-400&quot;</value>
                  <value>&quot;B747 400&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-400&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747- 400&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767 / A320&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 767/Airbus A320&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;boeing 787&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-800 / 777-200&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-170&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer E190&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;Embraer170&quot;</value>
                  <value>&quot;Saab 2000&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='real' name='[Calculation_927178577265307648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Rating&apos; then [rating]&#13;&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#13;&#10;when &apos;Ground Service&apos; then [ground_service]&#13;&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#13;&#10;when &apos;Food&apos; then [food_beverages]&#13;&#10;when &apos;Entertainment&apos; then [entertainment]&#13;&#10;when &apos;Value For Money&apos; then [value_for_money]&#13;&#10;END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='clean_data.csv' datatype='integer' name='[__tableau_internal_object_id__].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='clean_data.csv' datatype='table' name='[__tableau_internal_object_id__].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_927178577265307648]' derivation='Avg' name='[avg:Calculation_927178577265307648:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='real' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='real' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food' datatype='real' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='real' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='real' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='real' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' scope='cols' value='Rating' />
            <format attr='title' class='0' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk]' scope='cols' value='Number of Reviews' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
            <format attr='text-format' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d2d9ea</color>
                <color>#b5c3e3</color>
                <color>#9aaedc</color>
                <color>#809ad5</color>
                <color>#6787cf</color>
                <color>#5074c8</color>
                <color>#3a63c1</color>
                <color>#2553ba</color>
                <color>#1143b3</color>
                <color>#0035ad</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eddbdb</color>
                <color>#e9c6c6</color>
                <color>#e5b2b2</color>
                <color>#e29e9e</color>
                <color>#de8b8b</color>
                <color>#da7878</color>
                <color>#d76666</color>
                <color>#d35454</color>
                <color>#cf4343</color>
                <color>#cc3333</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#cc3333' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]</rows>
        <cols>([federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk] + [federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk])</cols>
      </table>
      <simple-id uuid='{CBF42F94-DDBB-40C5-8E82-4AC9A385423D}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>Average &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>&gt; By Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data+' name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rating&quot;'>
              <calculation class='tableau' formula='&quot;Rating&quot;' />
              <aliases>
                <alias key='&quot;Food&quot;' value='Food &amp; Beverages' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0w7kqq11bdqohj1gtgbs80a1bgp0'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Other Aircrafts&quot;'>
                  <value>&quot;767-300&quot;</value>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-200&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A319/A321&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 and A319&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, Boeing 767-300&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/321&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/A321&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 and B767&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321/A319&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 800&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;Airbus A380&quot;</value>
                  <value>&quot;B0eing 747-400&quot;</value>
                  <value>&quot;B747 400&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-400&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747- 400&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767 / A320&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 767/Airbus A320&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;boeing 787&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-800 / 777-200&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-170&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer E190&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;Embraer170&quot;</value>
                  <value>&quot;Saab 2000&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='real' name='[Calculation_927178577265307648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Rating&apos; then [rating]&#13;&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#13;&#10;when &apos;Ground Service&apos; then [ground_service]&#13;&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#13;&#10;when &apos;Food&apos; then [food_beverages]&#13;&#10;when &apos;Entertainment&apos; then [entertainment]&#13;&#10;when &apos;Value For Money&apos; then [value_for_money]&#13;&#10;END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='clean_data.csv' datatype='integer' name='[__tableau_internal_object_id__].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='clean_data.csv' datatype='table' name='[__tableau_internal_object_id__].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_927178577265307648]' derivation='Avg' name='[avg:Calculation_927178577265307648:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='real' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='real' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food' datatype='real' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='real' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='real' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='real' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#c8ddd5</color>
                <color>#a3cabc</color>
                <color>#81b7a3</color>
                <color>#64a48c</color>
                <color>#4a9177</color>
                <color>#347e63</color>
                <color>#216b50</color>
                <color>#13583e</color>
                <color>#08452e</color>
                <color>#013220</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.60000002384185791' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]' value='Month of Date'>
              <formatted-text>
                <run fontcolor='#0035ad'>Month of Date</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]' value='Seat Type'>
              <formatted-text>
                <run fontcolor='#0035ad'>Seat Type</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]' value='Traveller Type'>
              <formatted-text>
                <run fontcolor='#0035ad'>Traveller Type</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]' value='Continent'>
              <formatted-text>
                <run fontcolor='#0035ad'>Continent</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]' value='Aircraft'>
              <formatted-text>
                <run fontcolor='#0035ad'>Aircraft</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' />
              <lod column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:place:nk]' />
              <tooltip column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk]' />
              <geometry column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Place:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:place:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'><![CDATA[Avg. <[Parameters].[Parameter 1]>: ]]></run>
                <run bold='true'><![CDATA[<[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Number of Reviews: <[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[__tableau_internal_object_id__].[cnt:clean_data.csv_FB3ED7FD856642249AE1F9DFB538B043:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Latitude (generated)]</rows>
        <cols>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{ADE1189C-74AA-4CAC-B495-DC0A57880B36}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>Average &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontcolor='#0035ad'>&gt; By Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data+' name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rating&quot;'>
              <calculation class='tableau' formula='&quot;Rating&quot;' />
              <aliases>
                <alias key='&quot;Food&quot;' value='Food &amp; Beverages' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0w7kqq11bdqohj1gtgbs80a1bgp0'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Other Aircrafts&quot;'>
                  <value>&quot;767-300&quot;</value>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-200&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A319/A321&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 and A319&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, Boeing 767-300&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/321&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/A321&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 and B767&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321/A319&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 800&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;Airbus A380&quot;</value>
                  <value>&quot;B0eing 747-400&quot;</value>
                  <value>&quot;B747 400&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-400&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747- 400&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767 / A320&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 767/Airbus A320&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;boeing 787&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-800 / 777-200&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-170&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer E190&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;Embraer170&quot;</value>
                  <value>&quot;Saab 2000&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='real' name='[Calculation_927178577265307648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Rating&apos; then [rating]&#13;&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#13;&#10;when &apos;Ground Service&apos; then [ground_service]&#13;&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#13;&#10;when &apos;Food&apos; then [food_beverages]&#13;&#10;when &apos;Entertainment&apos; then [entertainment]&#13;&#10;when &apos;Value For Money&apos; then [value_for_money]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_927178577265307648]' derivation='Avg' name='[avg:Calculation_927178577265307648:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='real' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='real' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food' datatype='real' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='real' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='real' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='real' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#cc3333' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]</rows>
        <cols>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{75233F05-79EA-4B58-B7E4-F30699664866}' />
    </worksheet>
    <worksheet name='Summary'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data+' name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0' />
          </datasources>
          <datasource-dependencies datasource='federated.0w7kqq11bdqohj1gtgbs80a1bgp0'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Other Aircrafts&quot;'>
                  <value>&quot;767-300&quot;</value>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-200&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A319/A321&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 and A319&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, Boeing 767-300&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/321&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/A321&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 and B767&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321/A319&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 800&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;Airbus A380&quot;</value>
                  <value>&quot;B0eing 747-400&quot;</value>
                  <value>&quot;B747 400&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-400&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747- 400&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767 / A320&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 767/Airbus A320&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;boeing 787&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-800 / 777-200&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-170&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer E190&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;Embraer170&quot;</value>
                  <value>&quot;Saab 2000&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[entertainment]' derivation='Avg' name='[avg:entertainment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_beverages]' derivation='Avg' name='[avg:food_beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ground_service]' derivation='Avg' name='[avg:ground_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seat_comfort]' derivation='Avg' name='[avg:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value_for_money]' derivation='Avg' name='[avg:value_for_money:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='real' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='real' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food' datatype='real' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='real' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='real' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='real' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:cabin_staff_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:entertainment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:ground_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:food_beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:seat_comfort:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:value_for_money:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:cabin_staff_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:rating:qk]&quot;</bucket>
              <bucket>&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:entertainment:qk]&quot;</bucket>
              <bucket>&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:ground_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:food_beverages:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]' value='183' />
            <format attr='text-format' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Multiple Values]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Multiple Values]' />
              <text column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#cc3333' fontsize='20'><![CDATA[<[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#0035ad' fontsize='8'><![CDATA[<[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E7C99E74-5949-43F4-AEE0-BB72C0FF1DC9}' />
    </worksheet>
    <worksheet name='garbage'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data+' name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0' />
          </datasources>
          <datasource-dependencies datasource='federated.0w7kqq11bdqohj1gtgbs80a1bgp0'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Other Aircrafts&quot;'>
                  <value>&quot;767-300&quot;</value>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-200&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A319/A321&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 and A319&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, Boeing 767-300&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/321&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/A321&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 and B767&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321/A319&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 800&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;Airbus A380&quot;</value>
                  <value>&quot;B0eing 747-400&quot;</value>
                  <value>&quot;B747 400&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-400&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747- 400&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767 / A320&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 767/Airbus A320&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;boeing 787&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-800 / 777-200&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-170&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer E190&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;Embraer170&quot;</value>
                  <value>&quot;Saab 2000&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='real' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:cabin_staff_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:rating:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]</column>
            <column>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Multiple Values]</run>
                <run>&gt;&lt;</run>
                <run>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{58827937-0B8C-4E22-BD51-745715B89CE6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='clean_data+' name='federated.0w7kqq11bdqohj1gtgbs80a1bgp0' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rating&quot;'>
          <calculation class='tableau' formula='&quot;Rating&quot;' />
          <aliases>
            <alias key='&quot;Food&quot;' value='Food &amp; Beverages' />
          </aliases>
          <members>
            <member value='&quot;Rating&quot;' />
            <member value='&quot;Cabin Staff Service&quot;' />
            <member value='&quot;Ground Service&quot;' />
            <member value='&quot;Seat Comfort&quot;' />
            <member alias='Food &amp; Beverages' value='&quot;Food&quot;' />
            <member value='&quot;Entertainment&quot;' />
            <member value='&quot;Value For Money&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0w7kqq11bdqohj1gtgbs80a1bgp0'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Other Aircrafts&quot;'>
              <value>&quot;767-300&quot;</value>
              <value>&quot;777&quot;</value>
              <value>&quot;777-200&quot;</value>
              <value>&quot;787&quot;</value>
              <value>&quot;A19&quot;</value>
              <value>&quot;A219&quot;</value>
              <value>&quot;A318&quot;</value>
              <value>&quot;A319 / A320&quot;</value>
              <value>&quot;A319/A320&quot;</value>
              <value>&quot;A319/A321&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 and A319&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 neo&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320-233&quot;</value>
              <value>&quot;A320, Boeing 767-300&quot;</value>
              <value>&quot;A320/319&quot;</value>
              <value>&quot;A320/321&quot;</value>
              <value>&quot;A320/A319&quot;</value>
              <value>&quot;A320/A321&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A320Neo&quot;</value>
              <value>&quot;A320NEO&quot;</value>
              <value>&quot;A321 and B767&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-200&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321/A319&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A321Neo&quot;</value>
              <value>&quot;A321NEO&quot;</value>
              <value>&quot;A322&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 / Boeing 777&quot;</value>
              <value>&quot;A380 800&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380 and Boeing 747&quot;</value>
              <value>&quot;A380 and Boeing 777&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;Airbus A32&quot;</value>
              <value>&quot;Airbus A320&quot;</value>
              <value>&quot;Airbus A380&quot;</value>
              <value>&quot;B0eing 747-400&quot;</value>
              <value>&quot;B747 400&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B747-400 in retro&quot;</value>
              <value>&quot;B777-200&quot;</value>
              <value>&quot;Boeing 737&quot;</value>
              <value>&quot;Boeing 737 800&quot;</value>
              <value>&quot;Boeing 737-400&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / 777&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747- 400&quot;</value>
              <value>&quot;Boeing 747-400 / A380&quot;</value>
              <value>&quot;Boeing 757&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 767 / A320&quot;</value>
              <value>&quot;Boeing 767-300&quot;</value>
              <value>&quot;Boeing 767, A319&quot;</value>
              <value>&quot;Boeing 767/Airbus A320&quot;</value>
              <value>&quot;Boeing 777&quot;</value>
              <value>&quot;Boeing 777 - 200&quot;</value>
              <value>&quot;Boeing 777 -200&quot;</value>
              <value>&quot;Boeing 777 / A380&quot;</value>
              <value>&quot;Boeing 777 200/300&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200 / 747-400&quot;</value>
              <value>&quot;Boeing 777-200 ER&quot;</value>
              <value>&quot;Boeing 777-200/300&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;boeing 787&quot;</value>
              <value>&quot;Boeing 787 Dreamliner&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-8 / 787-9&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-800 / 777-200&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9, A380&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;Boieng 777-200&quot;</value>
              <value>&quot;Dreamliner&quot;</value>
              <value>&quot;E-170&quot;</value>
              <value>&quot;E-190&quot;</value>
              <value>&quot;E170&quot;</value>
              <value>&quot;E170 / A319&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;EMB190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
              <value>&quot;Embraer 195&quot;</value>
              <value>&quot;Embraer E190&quot;</value>
              <value>&quot;Embraer-190&quot;</value>
              <value>&quot;Embraer170&quot;</value>
              <value>&quot;Saab 2000&quot;</value>
              <value>&quot;SAAB 2000&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='86875' id='4' param='vert' type-v2='layout-flow' w='14583' x='0' y='13125'>
          <zone h='24625' id='11' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14583' x='0' y='13125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9125' id='6' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14583' x='0' y='37750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='18875' id='8' mode='radiolist' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]' type-v2='filter' w='14583' x='0' y='46875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='18875' id='7' mode='radiolist' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]' type-v2='filter' w='14583' x='0' y='65750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7625' id='10' mode='dropdown' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]' type-v2='filter' w='14583' x='0' y='84625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7625' id='9' mode='dropdown' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]' type-v2='filter' w='14583' x='0' y='92250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='50000' id='12' param='horz' type-v2='layout-flow' w='85417' x='14583' y='13125'>
          <zone h='50000' id='13' name='Month' w='39708' x='14583' y='13125'>
            <layout-cache minwidth='130' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='50000' id='5' name='Map' w='45708' x='54291' y='13125'>
            <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='36875' id='14' param='vert' type-v2='layout-flow' w='85000' x='14583' y='63125'>
          <zone h='36875' id='15' name='Aircraft' w='85000' x='14583' y='63125'>
            <layout-cache fixed-size-h='333' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='13125' id='20' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='139' h='13125' id='21' is-fixed='true' is-scaled='1' param='C:/Users/cem-c/Desktop/BritishAirwaysProject_v2/british-airways-logo-transparent.png' type-v2='bitmap' w='12250' x='0' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13125' id='2' name='Summary' w='87745' x='12250' y='0'>
            <layout-cache cell-count-w='7' type-h='cell' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone fixed-size='97' h='13125' id='21' is-fixed='true' is-scaled='1' param='C:/Users/cem-c/Desktop/BritishAirwaysProject_v2/british-airways-logo-transparent.png' type-v2='bitmap' w='12250' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='97' h='13125' id='2' is-fixed='true' name='Summary' w='87745' x='12250' y='0'>
                  <layout-cache cell-count-w='7' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24625' id='11' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14583' x='0' y='13125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='13' is-fixed='true' name='Month' w='39708' x='14583' y='13125'>
                  <layout-cache minwidth='130' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='6' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14583' x='0' y='37750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18875' id='8' mode='dropdown' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]' type-v2='filter' w='14583' x='0' y='46875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18875' id='7' mode='dropdown' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]' type-v2='filter' w='14583' x='0' y='65750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='10' mode='dropdown' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]' type-v2='filter' w='14583' x='0' y='84625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='9' mode='dropdown' name='Map' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]' type-v2='filter' w='14583' x='0' y='92250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='5' is-fixed='true' name='Map' w='45708' x='54291' y='13125'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36875' id='15' is-fixed='true' name='Aircraft' w='85000' x='14583' y='63125'>
                  <layout-cache fixed-size-h='333' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08981E4E-63D3-422D-906B-02B302618067}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='garbage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C89DF79C-0DCA-4919-9281-F1B95E3CEA1A}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='radiolist' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:traveller_type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:seat_type:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]' type='filter' />
            <card mode='dropdown' param='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[none:Continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[mn:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{982D8316-B603-43E1-A6CA-767323E20186}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[tmn:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B0A8664-8642-43E4-8EAB-E8BBF64E7EF7}' />
    </window>
    <window class='worksheet' name='Aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[Aircraft (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8520A91C-127C-46C0-8C4C-2418D22E45B8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Aircraft' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Summary'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DCB6D9D3-B7A8-4E30-99B1-AC0F5D53333A}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10A1B15C-8930-469E-A093-394031571A12}' />
    </window>
  </windows>
  <_.fcp.DatagraphCoreV1.true...datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='3daffd3c-501c-4790-bd8c-88556bbd5749' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='3daffd3c-501c-4790-bd8c-88556bbd5749' node-guid='648989f3-70b8-4f33-a648-6d3da8339d3c' />
        <pair execution-subgraph-guid='3daffd3c-501c-4790-bd8c-88556bbd5749' node-guid='3c17cd72-1872-4dd0-97a6-7e95594862fc' />
      </node-execution-subgraphs>
      <nodes>
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='aa4b17c6-c63e-47e4-a355-82feaade453a' node-guid='648989f3-70b8-4f33-a648-6d3da8339d3c' value-output-guid='06821dbd-9a87-40d3-a8f6-556f4619de87' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0w7kqq11bdqohj1gtgbs80a1bgp0].[avg:Calculation_927178577265307648:qk]' node-guid='3c17cd72-1872-4dd0-97a6-7e95594862fc' orientation='horizontal' sheet-identifier='{CBF42F94-DDBB-40C5-8E82-4AC9A385423D}' title-input-guid='70afb514-cb19-4164-893f-3dc1618c9185' />
      </nodes>
      <edges>
        <edge from='06821dbd-9a87-40d3-a8f6-556f4619de87' to='70afb514-cb19-4164-893f-3dc1618c9185' />
      </edges>
      <pin-values />
    </graph>
  </_.fcp.DatagraphCoreV1.true...datagraph>
  <thumbnails>
    <thumbnail height='384' name='Aircraft' width='384'>
      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
      8an/B/xw+RoypelWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Month' width='384'>
      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
    </thumbnail>
    <thumbnail height='134' name='Summary' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='92' name='garbage' width='208'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
